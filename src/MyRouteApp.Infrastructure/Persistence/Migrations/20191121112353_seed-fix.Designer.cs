// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyRouteApp.Infrastructure.Persistence;

namespace MyRouteApp.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20191121112353_seed-fix")]
    partial class seedfix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113");

            modelBuilder.Entity("MyRouteApp.Infrastructure.Persistence.DTO.Point", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Points");

                    b.HasData(
                        new { Id = 1, Name = "A" },
                        new { Id = 2, Name = "B" },
                        new { Id = 3, Name = "C" },
                        new { Id = 4, Name = "D" },
                        new { Id = 5, Name = "E" },
                        new { Id = 6, Name = "F" },
                        new { Id = 7, Name = "G" },
                        new { Id = 8, Name = "H" },
                        new { Id = 9, Name = "I" }
                    );
                });

            modelBuilder.Entity("MyRouteApp.Infrastructure.Persistence.DTO.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Cost");

                    b.Property<int>("DestinationPointId");

                    b.Property<int>("OriginalPointId");

                    b.Property<int>("Time");

                    b.HasKey("Id");

                    b.HasIndex("OriginalPointId");

                    b.HasIndex("DestinationPointId", "OriginalPointId")
                        .IsUnique();

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("MyRouteApp.Infrastructure.Persistence.DTO.Route", b =>
                {
                    b.HasOne("MyRouteApp.Infrastructure.Persistence.DTO.Point", "DestinationPoint")
                        .WithMany("DestinationRouteList")
                        .HasForeignKey("DestinationPointId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyRouteApp.Infrastructure.Persistence.DTO.Point", "OriginalPoint")
                        .WithMany("OriginalRouteList")
                        .HasForeignKey("OriginalPointId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
